>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

>>> matrix_valid_int = [[2, 4, 3], [5, 6, 7]]

>>> matrix_valid_float = [[1.5, 3.5], [3.5, 2.5]]

>>> matrix_empty = []

>>> matrix_invalid = [[1, 2, 'a'], [3, 2, 1]]

>>> matrix_row_invalid = [[1, 2], [1, 2, 3]]

>>> matrix_divided(matrix_valid_int, 2)
[[1.0, 2.0, 1.5], [2.5, 3.0, 3.5]]

>>> matrix_divided(matrix_valid_int, 3.5)
[[0.57, 1.14, 0.86], [1.43, 1.71, 2.0]]

>>> matrix_divided(matrix_valid_int, -2)
[[-1.0, -2.0, -1.5], [-2.5, -3.0, -3.5]]

>>> matrix_divided(matrix_valid_float, 2)
[[0.75, 1.75], [1.75, 1.25]]

>>> matrix_divided(matrix_valid_float, -2)
[[-0.75, -1.75], [-1.75, -1.25]]

>>> matrix_divided(matrix_empty, 3)
Traceback (most recent call last):
...
IndexError: matrix must not be empty

>>> matrix_divided(matrix_row_invalid, 5)
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size

>>> matrix_divided(matrix_invalid, 2)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided(3, 2)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided(matrix_valid_int, 0)
Traceback (most recent call last):
...
ZeroDivisionError: division by zero

>>> matrix_divided(matrix_valid_int, 'a')
Traceback (most recent call last):
...
TypeError: div must be a number
